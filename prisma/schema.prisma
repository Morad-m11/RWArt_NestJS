datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id                       Int                       @id @default(autoincrement())
    email                    String                    @unique
    picture                  String?
    username                 String
    passwordHash             String?
    email_verified           Boolean                   @default(false)
    createdAt                DateTime                  @default(now())
    updatedAt                DateTime                  @updatedAt
    refreshTokens            RefreshToken[]
    passwordResetToken       PasswordResetToken?
    accountVerificationToken AccountVerificationToken?
    thirdPartyAccount        ThirdPartyAccount?
}

model ThirdPartyAccount {
    id         Int    @id @default(autoincrement())
    userId     Int    @unique
    provider   String
    providerId String
    User       User   @relation(fields: [userId], references: [id])

    @@unique([provider, providerId])
}

model RefreshToken {
    id            Int       @id @default(autoincrement())
    userId        Int
    tokenHash     String    @unique
    createdByIp   String
    createdAt     DateTime  @default(now())
    expiresAt     DateTime
    revokedAt     DateTime?
    revokedReason String?
    user          User      @relation(fields: [userId], references: [id])
}

model PasswordResetToken {
    id        Int      @id @default(autoincrement())
    userId    Int      @unique
    tokenHash String   @unique
    createdAt DateTime @default(now())
    expiresAt DateTime
    user      User     @relation(fields: [userId], references: [id])
}

model AccountVerificationToken {
    id        Int      @id @default(autoincrement())
    userId    Int      @unique
    tokenHash String   @unique
    createdAt DateTime @default(now())
    expiresAt DateTime
    user      User     @relation(fields: [userId], references: [id])
}
